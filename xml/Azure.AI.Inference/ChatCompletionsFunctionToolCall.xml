<Type Name="ChatCompletionsFunctionToolCall" FullName="Azure.AI.Inference.ChatCompletionsFunctionToolCall">
  <TypeSignature Language="C#" Value="public class ChatCompletionsFunctionToolCall : Azure.AI.Inference.ChatCompletionsToolCall, System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatCompletionsFunctionToolCall extends Azure.AI.Inference.ChatCompletionsToolCall implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Inference.ChatCompletionsFunctionToolCall" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatCompletionsFunctionToolCall&#xA;Inherits ChatCompletionsToolCall&#xA;Implements IJsonModel(Of ChatCompletionsFunctionToolCall), IPersistableModel(Of ChatCompletionsFunctionToolCall)" />
  <TypeSignature Language="F#" Value="type ChatCompletionsFunctionToolCall = class&#xA;    inherit ChatCompletionsToolCall&#xA;    interface IJsonModel&lt;ChatCompletionsFunctionToolCall&gt;&#xA;    interface IPersistableModel&lt;ChatCompletionsFunctionToolCall&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Inference</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.AI.Inference.ChatCompletionsToolCall</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A tool call to a function tool, issued by the model in evaluation of a configured function tool, that represents
            a function invocation needed for a subsequent chat completions request to resolve.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatCompletionsFunctionToolCall (string id, Azure.AI.Inference.FunctionCall function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class Azure.AI.Inference.FunctionCall function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsFunctionToolCall.#ctor(System.String,Azure.AI.Inference.FunctionCall)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, function As FunctionCall)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatCompletionsFunctionToolCall : string * Azure.AI.Inference.FunctionCall -&gt; Azure.AI.Inference.ChatCompletionsFunctionToolCall" Usage="new Azure.AI.Inference.ChatCompletionsFunctionToolCall (id, function)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="function" Type="Azure.AI.Inference.FunctionCall" />
      </Parameters>
      <Docs>
        <param name="id"> The ID of the tool call. </param>
        <param name="function"> The details of the function invocation requested by the tool call. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.Inference.ChatCompletionsFunctionToolCall" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> or <paramref name="function" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatCompletionsFunctionToolCall (string id, string name, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string name, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsFunctionToolCall.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, name As String, arguments As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Inference.ChatCompletionsFunctionToolCall : string * string * string -&gt; Azure.AI.Inference.ChatCompletionsFunctionToolCall" Usage="new Azure.AI.Inference.ChatCompletionsFunctionToolCall (id, name, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"> The ID of the function tool call. </param>
        <param name="name"> The name of the function that is called by the tool. </param>
        <param name="arguments"> The arguments to the function that is called by the tool. </param>
        <summary>
            Initializes a new instance of <see cref="T:Azure.AI.Inference.ChatCompletionsFunctionToolCall" />.
            </summary>
        <remarks>
            This constructor is intended for use with <see cref="T:Azure.AI.Inference.ChatRequestAssistantMessage" /> when constructing request
            messages for conversation history from accumulated streaming tool call updates.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsFunctionToolCall.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="Azure.AI.Inference.ChatCompletionsFunctionToolCall.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The arguments to call the function with, as generated by the model in JSON format.
            Note that the model does not always generate valid JSON, and may hallucinate parameters
            not defined by your function schema. Validate the arguments in your code before calling
            your function.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Inference.ChatCompletionsFunctionToolCall.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Azure.AI.Inference.ChatCompletionsFunctionToolCall.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The name of the function to call. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatCompletionsFunctionToolCall IJsonModel&lt;ChatCompletionsFunctionToolCall&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatCompletionsFunctionToolCall System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsFunctionToolCall.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatCompletionsFunctionToolCall&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ChatCompletionsFunctionToolCall Implements IJsonModel(Of ChatCompletionsFunctionToolCall).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsFunctionToolCall&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsFunctionToolCall" Usage="chatCompletionsFunctionToolCall.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatCompletionsFunctionToolCall</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ChatCompletionsFunctionToolCall&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsFunctionToolCall.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#Inference#ChatCompletionsFunctionToolCall&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ChatCompletionsFunctionToolCall).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="chatCompletionsFunctionToolCall.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.Inference.ChatCompletionsFunctionToolCall IPersistableModel&lt;ChatCompletionsFunctionToolCall&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.Inference.ChatCompletionsFunctionToolCall System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsFunctionToolCall.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatCompletionsFunctionToolCall&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ChatCompletionsFunctionToolCall Implements IPersistableModel(Of ChatCompletionsFunctionToolCall).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsFunctionToolCall&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.Inference.ChatCompletionsFunctionToolCall" Usage="chatCompletionsFunctionToolCall.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Inference.ChatCompletionsFunctionToolCall</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ChatCompletionsFunctionToolCall&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsFunctionToolCall.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatCompletionsFunctionToolCall&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ChatCompletionsFunctionToolCall).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="chatCompletionsFunctionToolCall.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to consider when serializing and deserializing the model.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            </summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ChatCompletionsFunctionToolCall&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Inference.ChatCompletionsFunctionToolCall.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#Inference#ChatCompletionsFunctionToolCall&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ChatCompletionsFunctionToolCall).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="chatCompletionsFunctionToolCall.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.Inference.ChatCompletionsFunctionToolCall&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Inference</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
