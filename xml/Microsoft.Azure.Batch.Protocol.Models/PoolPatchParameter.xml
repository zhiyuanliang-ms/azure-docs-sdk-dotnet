<Type Name="PoolPatchParameter" FullName="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter">
  <TypeSignature Language="C#" Value="public class PoolPatchParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PoolPatchParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class PoolPatchParameter" />
  <TypeSignature Language="F#" Value="type PoolPatchParameter = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
    <AssemblyVersion>14.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
    <AssemblyVersion>15.3.0.0</AssemblyVersion>
    <AssemblyVersion>15.4.0.0</AssemblyVersion>
    <AssemblyVersion>16.0.0.0</AssemblyVersion>
    <AssemblyVersion>16.1.0.0</AssemblyVersion>
    <AssemblyVersion>16.2.0.0</AssemblyVersion>
    <AssemblyVersion>16.3.0.0</AssemblyVersion>
    <AssemblyVersion>16.3.1.0</AssemblyVersion>
    <AssemblyVersion>16.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The set of changes to be made to a Pool.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PoolPatchParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the PoolPatchParameter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PoolPatchParameter (Microsoft.Azure.Batch.Protocol.Models.StartTask startTask = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt; certificateReferences = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt; applicationPackageReferences = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt; metadata = default, Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode? targetNodeCommunicationMode = default, string displayName = default, string vmSize = default, int? taskSlotsPerNode = default, Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy taskSchedulingPolicy = default, bool? enableInterNodeCommunication = default, Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration virtualMachineConfiguration = default, Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration networkConfiguration = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt; userAccounts = default, System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt; mountConfiguration = default, Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy upgradePolicy = default, System.Collections.Generic.IDictionary&lt;string,string&gt; resourceTags = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Azure.Batch.Protocol.Models.StartTask startTask, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt; certificateReferences, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt; applicationPackageReferences, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt; metadata, valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode&gt; targetNodeCommunicationMode, string displayName, string vmSize, valuetype System.Nullable`1&lt;int32&gt; taskSlotsPerNode, class Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy taskSchedulingPolicy, valuetype System.Nullable`1&lt;bool&gt; enableInterNodeCommunication, class Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration virtualMachineConfiguration, class Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration networkConfiguration, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt; userAccounts, class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt; mountConfiguration, class Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy upgradePolicy, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; resourceTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.#ctor(Microsoft.Azure.Batch.Protocol.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MetadataItem},System.Nullable{Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode},System.String,System.String,System.Nullable{System.Int32},Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy,System.Nullable{System.Boolean},Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration,Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration,System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.UserAccount},System.Collections.Generic.IList{Microsoft.Azure.Batch.Protocol.Models.MountConfiguration},Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional startTask As StartTask = Nothing, Optional certificateReferences As IList(Of CertificateReference) = Nothing, Optional applicationPackageReferences As IList(Of ApplicationPackageReference) = Nothing, Optional metadata As IList(Of MetadataItem) = Nothing, Optional targetNodeCommunicationMode As Nullable(Of NodeCommunicationMode) = Nothing, Optional displayName As String = Nothing, Optional vmSize As String = Nothing, Optional taskSlotsPerNode As Nullable(Of Integer) = Nothing, Optional taskSchedulingPolicy As TaskSchedulingPolicy = Nothing, Optional enableInterNodeCommunication As Nullable(Of Boolean) = Nothing, Optional virtualMachineConfiguration As VirtualMachineConfiguration = Nothing, Optional networkConfiguration As NetworkConfiguration = Nothing, Optional userAccounts As IList(Of UserAccount) = Nothing, Optional mountConfiguration As IList(Of MountConfiguration) = Nothing, Optional upgradePolicy As UpgradePolicy = Nothing, Optional resourceTags As IDictionary(Of String, String) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter : Microsoft.Azure.Batch.Protocol.Models.StartTask * System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt; * Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode&gt; * string * string * Nullable&lt;int&gt; * Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy * Nullable&lt;bool&gt; * Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration * Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration * System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt; * System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt; * Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter" Usage="new Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter (startTask, certificateReferences, applicationPackageReferences, metadata, targetNodeCommunicationMode, displayName, vmSize, taskSlotsPerNode, taskSchedulingPolicy, enableInterNodeCommunication, virtualMachineConfiguration, networkConfiguration, userAccounts, mountConfiguration, upgradePolicy, resourceTags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="startTask" Type="Microsoft.Azure.Batch.Protocol.Models.StartTask" />
        <Parameter Name="certificateReferences" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt;" />
        <Parameter Name="applicationPackageReferences" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt;" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt;" />
        <Parameter Name="targetNodeCommunicationMode" Type="System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode&gt;" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="vmSize" Type="System.String" />
        <Parameter Name="taskSlotsPerNode" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="taskSchedulingPolicy" Type="Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy" />
        <Parameter Name="enableInterNodeCommunication" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="virtualMachineConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration" />
        <Parameter Name="networkConfiguration" Type="Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration" />
        <Parameter Name="userAccounts" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt;" />
        <Parameter Name="mountConfiguration" Type="System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt;" />
        <Parameter Name="upgradePolicy" Type="Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy" />
        <Parameter Name="resourceTags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="startTask">A Task to run on each Compute Node as it
            joins the Pool. The Task runs when the Compute Node is added to the
            Pool or when the Compute Node is restarted.</param>
        <param name="certificateReferences">A list of Certificates to be
            installed on each Compute Node in the Pool.</param>
        <param name="applicationPackageReferences">A list of Packages to be
            installed on each Compute Node in the Pool.</param>
        <param name="metadata">A list of name-value pairs associated with
            the Pool as metadata.</param>
        <param name="targetNodeCommunicationMode">The desired node
            communication mode for the pool.</param>
        <param name="displayName">The display name for the Pool.</param>
        <param name="vmSize">The size of virtual machines in the Pool. All
            VMs in a Pool are the same size.</param>
        <param name="taskSlotsPerNode">The number of task slots that can be
            used to run concurrent tasks on a single compute node in the
            pool.</param>
        <param name="taskSchedulingPolicy">How Tasks are distributed across
            Compute Nodes in a Pool.</param>
        <param name="enableInterNodeCommunication">Whether the Pool permits
            direct communication between Compute Nodes.</param>
        <param name="virtualMachineConfiguration">The virtual machine
            configuration for the Pool.</param>
        <param name="networkConfiguration">The network configuration for
            the Pool.</param>
        <param name="userAccounts">The list of user Accounts to be created
            on each Compute Node in the Pool.</param>
        <param name="mountConfiguration">Mount storage using specified file
            system for the entire lifetime of the pool.</param>
        <param name="upgradePolicy">The upgrade policy for the
            Pool.</param>
        <param name="resourceTags">The user-specified tags associated with
            the pool.</param>
        <summary>
            Initializes a new instance of the PoolPatchParameter class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPackageReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt; ApplicationPackageReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt; ApplicationPackageReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPackageReferences As IList(Of ApplicationPackageReference)" />
      <MemberSignature Language="F#" Value="member this.ApplicationPackageReferences : System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ApplicationPackageReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="applicationPackageReferences")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="applicationPackageReferences")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.ApplicationPackageReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of Packages to be installed on each Compute
            Node in the Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            Changes to Package references affect all new Nodes joining the
            Pool, but do not affect Compute Nodes that are already in the Pool
            until they are rebooted or reimaged. If this element is present, it
            replaces any existing Package references. If you specify an empty
            collection, then all Package references are removed from the Pool.
            If omitted, any existing Package references are left unchanged.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt; CertificateReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt; CertificateReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateReferences As IList(Of CertificateReference)" />
      <MemberSignature Language="F#" Value="member this.CertificateReferences : System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.CertificateReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="certificateReferences")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="certificateReferences")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.CertificateReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Gets or sets a list of Certificates to be installed on each Compute
             Node in the Pool.
             </summary>
        <value>To be added.</value>
        <remarks>
             If this element is present, it replaces any existing Certificate
             references configured on the Pool. If omitted, any existing
             Certificate references are left unchanged. For Windows Nodes, the
             Batch service installs the Certificates to the specified
             Certificate store and location. For Linux Compute Nodes, the
             Certificates are stored in a directory inside the Task working
             directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
             supplied to the Task to query for this location. For Certificates
             with visibility of 'remoteUser', a 'certs' directory is created in
             the user's home directory (e.g., /home/{user-name}/certs) and
             Certificates are placed in that directory.
            
             Warning: This property is deprecated and will be removed after
             February, 2024. Please use the [Azure KeyVault
             Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
             instead.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="displayName")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="displayName")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the display name for the Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.<br /><br />This field
            can be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInterNodeCommunication">
      <MemberSignature Language="C#" Value="public bool? EnableInterNodeCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; EnableInterNodeCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.EnableInterNodeCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInterNodeCommunication As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.EnableInterNodeCommunication : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.EnableInterNodeCommunication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="enableInterNodeCommunication")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="enableInterNodeCommunication")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the Pool permits direct communication between
            Compute Nodes.
            </summary>
        <value>To be added.</value>
        <remarks>
            Enabling inter-node communication limits the maximum size of the
            Pool due to deployment restrictions on the Compute Nodes of the
            Pool. This may result in the Pool not reaching its desired size.
            The default value is false.<br /><br />This field can be updated
            only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt; Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As IList(Of MetadataItem)" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="metadata")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="metadata")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MetadataItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a list of name-value pairs associated with the Pool as
            metadata.
            </summary>
        <value>To be added.</value>
        <remarks>
            If this element is present, it replaces any existing metadata
            configured on the Pool. If you specify an empty collection, any
            metadata is removed from the Pool. If omitted, any existing
            metadata is left unchanged.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MountConfiguration">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt; MountConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt; MountConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.MountConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property MountConfiguration As IList(Of MountConfiguration)" />
      <MemberSignature Language="F#" Value="member this.MountConfiguration : System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.MountConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="mountConfiguration")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="mountConfiguration")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.MountConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets mount storage using specified file system for the
            entire lifetime of the pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            Mount the storage using Azure fileshare, NFS, CIFS or Blobfuse
            based file system.<br /><br />This field can be updated only when
            the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration NetworkConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration NetworkConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.NetworkConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property NetworkConfiguration As NetworkConfiguration" />
      <MemberSignature Language="F#" Value="member this.NetworkConfiguration : Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.NetworkConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="networkConfiguration")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="networkConfiguration")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.NetworkConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the network configuration for the Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            This field can be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceTags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ResourceTags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ResourceTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ResourceTags" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceTags As IDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.ResourceTags : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.ResourceTags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="resourceTags")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="resourceTags")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the user-specified tags associated with the pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            The user-defined tags to be associated with the Azure Batch Pool.
            When specified, these tags are propagated to the backing Azure
            resources associated with the pool. This property can only be
            specified when the Batch account was created with the
            poolAllocationMode property set to 'UserSubscription'.<br /><br />This field can be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTask">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.StartTask StartTask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Batch.Protocol.Models.StartTask StartTask" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask" />
      <MemberSignature Language="VB.NET" Value="Public Property StartTask As StartTask" />
      <MemberSignature Language="F#" Value="member this.StartTask : Microsoft.Azure.Batch.Protocol.Models.StartTask with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.StartTask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="startTask")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="startTask")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.StartTask</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a Task to run on each Compute Node as it joins the
            Pool. The Task runs when the Compute Node is added to the Pool or
            when the Compute Node is restarted.
            </summary>
        <value>To be added.</value>
        <remarks>
            If this element is present, it overwrites any existing StartTask.
            If omitted, any existing StartTask is left unchanged.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNodeCommunicationMode">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode? TargetNodeCommunicationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode&gt; TargetNodeCommunicationMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.TargetNodeCommunicationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNodeCommunicationMode As Nullable(Of NodeCommunicationMode)" />
      <MemberSignature Language="F#" Value="member this.TargetNodeCommunicationMode : Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.TargetNodeCommunicationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="targetNodeCommunicationMode")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="targetNodeCommunicationMode")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Azure.Batch.Protocol.Models.NodeCommunicationMode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the desired node communication mode for the pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            If this element is present, it replaces the existing
            targetNodeCommunicationMode configured on the Pool. If omitted, any
            existing metadata is left unchanged. Possible values include:
            'default', 'classic', 'simplified'
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskSchedulingPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy TaskSchedulingPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy TaskSchedulingPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.TaskSchedulingPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskSchedulingPolicy As TaskSchedulingPolicy" />
      <MemberSignature Language="F#" Value="member this.TaskSchedulingPolicy : Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.TaskSchedulingPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="taskSchedulingPolicy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="taskSchedulingPolicy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.TaskSchedulingPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets how Tasks are distributed across Compute Nodes in a
            Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            If not specified, the default is spread.<br /><br />This field can
            be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskSlotsPerNode">
      <MemberSignature Language="C#" Value="public int? TaskSlotsPerNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; TaskSlotsPerNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.TaskSlotsPerNode" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskSlotsPerNode As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.TaskSlotsPerNode : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.TaskSlotsPerNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="taskSlotsPerNode")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="taskSlotsPerNode")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the number of task slots that can be used to run
            concurrent tasks on a single compute node in the pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is 1. The maximum value is the smaller of 4 times
            the number of cores of the vmSize of the pool or 256.<br /><br />This field can be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpgradePolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy UpgradePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy UpgradePolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.UpgradePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property UpgradePolicy As UpgradePolicy" />
      <MemberSignature Language="F#" Value="member this.UpgradePolicy : Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.UpgradePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="upgradePolicy")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="upgradePolicy")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.UpgradePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the upgrade policy for the Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            Describes an upgrade policy - automatic, manual, or rolling.<br /><br />This field can be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAccounts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt; UserAccounts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt; UserAccounts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.UserAccounts" />
      <MemberSignature Language="VB.NET" Value="Public Property UserAccounts As IList(Of UserAccount)" />
      <MemberSignature Language="F#" Value="member this.UserAccounts : System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt; with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.UserAccounts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="userAccounts")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="userAccounts")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Azure.Batch.Protocol.Models.UserAccount&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the list of user Accounts to be created on each
            Compute Node in the Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            This field can be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualMachineConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration VirtualMachineConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration VirtualMachineConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.VirtualMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMachineConfiguration As VirtualMachineConfiguration" />
      <MemberSignature Language="F#" Value="member this.VirtualMachineConfiguration : Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.VirtualMachineConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="virtualMachineConfiguration")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="virtualMachineConfiguration")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Azure.Batch.Protocol.Models.VirtualMachineConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the virtual machine configuration for the Pool.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property must be specified.<br /><br />This field can be
            updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="VmSize">
      <MemberSignature Language="C#" Value="public string VmSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VmSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.VmSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VmSize As String" />
      <MemberSignature Language="F#" Value="member this.VmSize : string with get, set" Usage="Microsoft.Azure.Batch.Protocol.Models.PoolPatchParameter.VmSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.Batch</AssemblyName>
        <AssemblyVersion>16.3.1.0</AssemblyVersion>
        <AssemblyVersion>16.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonProperty(PropertyName="vmSize")]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonProperty(PropertyName="vmSize")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the size of virtual machines in the Pool. All VMs in a
            Pool are the same size.
            </summary>
        <value>To be added.</value>
        <remarks>
            For information about available sizes of virtual machines in Pools,
            see Choose a VM size for Compute Nodes in an Azure Batch Pool
            (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).<br /><br />This field can be updated only when the pool is empty.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
